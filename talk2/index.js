// Generated by CoffeeScript 1.4.0
(function() {

  $.fn.extend({
    mathjax: function(opts) {
      if (opts == null) {
        opts = {};
      }
      if (!(opts.display != null)) {
        opts.display = true;
      }
      return this.each(function() {
        var element, t, tex;
        t = $(this);
        tex = t.html();
        if (opts.display) {
          tex = "$${" + tex + "}$$";
        } else {
          tex = "\\({" + tex + "}\\)";
        }
        element = t.html(tex);
        return MathJax.Hub.Queue(["Typeset", MathJax.Hub, element[0]]);
      });
    }
  });

  $(function() {
    var x, _i, _len, _ref;
    $("section").addClass('slide');
    $.deck('.slide');
    $("[rel=tooltip]").tooltip({
      delay: {
        show: 1000,
        hide: 100
      }
    });
    $(".eq").mathjax({
      display: true
    });
    _ref = ['raw', 'medium', 'well'];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      x = _ref[_i];
      $("#" + x + "-defn").hover((function() {
        $(this).data('conj').show();
        return $("#conj-inst").hide();
      }), (function() {
        $(this).data('conj').hide();
        return $("#conj-inst").show();
      })).data("conj", $("#" + x + "-conj"));
    }
    return $(".draggable").draggable();
  });

}).call(this);
